version: 1

title: Ingesting CSV Files

contributor: https://github.com/LeonardoBonacci

# Brief copy about this Recipe
summary: |-
  This recipe...

# Longer form copy about this Recipe
description: |-
  This recipe is ...

# Ingest Streams connect to data sources and establish how data is processed and transformed
ingestStreams:
  # INGEST-HIERARCHY
  - type: FileIngest
    path: $hierarchy_file
    format:
      type: CypherCsv
      headers: true
      query: |-
        WITH $that AS row
        MATCH (hi) 
        WHERE id(hi) = idFrom("Hi", row.hid)
        SET
          hi:Hi,
          hi.name = row.title,
          hi.hid = row.hid
        WITH hi, row.parent as parentId
        MATCH (par) 
        WHERE id(par) = idFrom("Hi", parentId)
        SET par.hid = parentId, par:Hi
        MERGE (hi:Hi)-[:CHILD]->(par:Hi)

  # INGEST-PRODUCTS
  - type: FileIngest
    path: $product_file
    format:
      type: CypherCsv
      headers: true
      query: |-
        WITH $that AS row
        MATCH (pr) 
        WHERE id(pr) = idFrom("Pr", row.pid)
        SET
          pr:Pr,
          pr.name = row.title,
          pr.pid = row.pid
        WITH pr, row.parent as parentId
        MATCH (par:Hi) 
        WHERE id(par) = idFrom("Hi", parentId)
        SET par.hid = parentId, par:Hi
        MERGE (pr:Pr)-[:CHILD]->(par:Hi)
        MERGE (pr:Pr)-[:IS]->(:Combined)

standingQueries:
  - pattern:
      type: Cypher
      query: |-
        MATCH (pr:Pr)
        RETURN DISTINCT id(pr) as id
    outputs:
      output-leaf:
        type: CypherQuery
        query: |-
          MATCH (com:Combined)<-[:IS]-(pr:Pr)-[:CHILD]->(child:Hi)-[:CHILD]->(mom:Hi)-[:CHILD]->(nanny:Hi)
          WHERE strId(pr) = $that.data.id
          SET 
            com.pr = pr.name,
            com.child = child.namechildName,
            com.mom = mom.name,
            com.nanny = nanny.name
          MERGE (pr)-[:IS]->(com)
  - pattern:
      type: Cypher
      query: |-
        MATCH (hi:Hi)
        RETURN DISTINCT id(hi) as id
    outputs:
      output-node:
        type: CypherQuery
        # FAILED ATTEMPT :-( the idea being to match an arbitrary sequence of Hi nodes and copy the fields of each node onto the Combined node

        # 2022-12-05 05:58:00,297 ERROR [akka.dispatch.Dispatcher] [graph-service-akka.actor.default-dispatcher-5] akka.dispatch.Dispatcher - Unsupported path expression
        # com.thatdot.quine.graph.cypher.CypherException$Compile: Unsupported path expression
        query: |-
          MATCH p=(com:Combined)<-[:IS]-(pr:Pr)-[:CHILD*1..]->(hi:Hi)-[:CHILD*0..]->(root:Hi)
          WHERE strId(hi) = $that.data.id
          FOREACH (n IN nodes(p) | SET n.marked = true)
          SET com.pr = pr.name
          MERGE (pr)-[:IS]->(com)
  - pattern:
      type: Cypher
      query: |-
        MATCH (n:Combined)
        RETURN DISTINCT id(n) AS id
    outputs:
      output-sout:
        type: CypherQuery
        query: |-
          MATCH (n)
          WHERE id(n) = $that.data.id
          RETURN properties(n)
        andThen:
          type: PrintToStandardOut

# Customize node appearance in web UI.
nodeAppearances: []

# Add queries to node context menus in web UI
quickQueries: []

# Customize sample queries listed in web UI
sampleQueries:
  - name: Latest
    query: call recentNodes(10)
  - name: Sample of Nodes
    query: match(n) return n limit 10
  - name: Count Nodes
    query: MATCH (n) RETURN distinct labels(n), count(*)
  - name: Count Relationships
    query: MATCH (n)-[r]->() RETURN type(r), count(*)